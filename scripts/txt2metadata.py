import pandas as pd
import pypeln.process as pr
from tqdm.autonotebook import tqdm
from pathlib import Path


def txt2metadata(txt_path, metadata_path, tag):
    metadata_path = Path(metadata_path)
    txt_df = pd.read_csv(txt_path, sep=' ', names=[
                         'topicid', 'Q0', 'docid', 'rank', 'score', 'run_tag'], header=None)
    metadata = pd.read_csv(metadata_path)

    print('Input text example:')
    print(txt_df.head(5))
    print('Metadata text example:')
    print(metadata.head(5))
    # merge using the docid, it will increase the number of rows
    metadata = metadata.merge(txt_df, left_on='cord_uid', right_on='docid',  how='outer')
    metadata = metadata.dropna(subset=['topicid'])

    bar = tqdm(total=len(metadata))

    def foo(x, *args, **kwargs):
        bar.update()
        # serialize topicid array
        return " ".join([str(int(e)) for e in x['topicid']])
    
    topicids_df = metadata.groupby('cord_uid').apply(foo, axis=0).to_frame('topicids')
    topicids_df = topicids_df.reset_index('cord_uid')
    # get only the rows with the cord_uid in commong with topicids_df
    metadata = metadata.merge(topicids_df, on='cord_uid')
    out_path = metadata_path.parent / metadata_path.stem
    out_path = str(out_path) + f'-{tag}.csv'
    print(f'Final shape={metadata.shape}')
    print('Output text example:')
    print(metadata.head(5))
    metadata.to_csv(out_path)


if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser(
        description='Includes to metadata.csv the topicids information.')
    parser.add_argument('--txt', type=str, required=True,
                        help='Path to the txt files generated by lucene searcher.')
    parser.add_argument(
        '--metadata',
        type=str, required=True,
        help='Path to the metadata files from https://www.kaggle.com/allen-institute-for-ai/CORD-19-research-challenge')
    
    parser.add_argument('--tag', type=str, default='test',
                        help='A tag for this run')
    args = parser.parse_args()

    txt2metadata(args.txt, args.metadata, args.tag)
    # txt2metadata('./dataset/submission-bm25-fused/lucene-index-cord19-2020-05-26-bm25.txt', './dataset/metadata.csv')
    # txt_path = './run-covid-2020-04-10-bm25.txt'
    # metadata_path = Path('./metadata.csv')
